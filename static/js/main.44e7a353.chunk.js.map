{"version":3,"sources":["features/Components/TempCheck.js","features/Components/DayCard.js","features/Components/Arrow.js","features/Components/Graph.js","features/store/weatherSlice.js","features/helper_functions/dayData.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["TempCheck","props","Grid","container","direction","justify","item","RadioGroup","row","name","value","onChange","handleChange","FormControlLabel","control","Radio","label","useStyles","makeStyles","theme","card","textAlign","breakpoints","down","padding","date","fontSize","temp","fontWeight","DayCard","temperatureType","classes","dayMeasurements","dayData","year","dayId","split","month","averageTemperature","data","tempSum","i","length","tempType","main","tempC","toFixed","averageTemp","Button","onClick","id","handler","Card","className","Typography","Arrow","IconButton","disabled","visible","left","root","paddingTop","chart","width","title","pos","marginBottom","Graph","options","xaxis","categories","measurementTimes","labels","style","colors","yaxis","dataLabels","enabled","offsetY","text","align","series","measuredTemperatures","type","height","require","config","weatherSlice","createSlice","initialState","isLoading","reducers","dataLoading","state","action","dataLoaded","payload","addDayId","list","actions","convertFtoC","parseFloat","preprocessData","allMeasurements","dt_txt","time","selectWeather","weather","findMeasurementsOfDay","days","day","push","grid","justifyContent","alignItems","maxWidth","loading","color","App","useState","setTempType","arrowIndex","setArrowIndex","graphId","setGraphId","weatherData","useSelector","rightInvisible","leftInvisible","daysToShow","slice","getTimeAndTemp","times","values","GraphData","graphIdHandler","console","log","event","target","map","store","configureStore","reducer","weatherReducer","Boolean","window","location","hostname","match","dispatch","a","fetch","method","response","json","ok","Error","statusText","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44e7a353.chunk.js","sourcesContent":["import React from \"react\";\nimport { RadioGroup, FormControlLabel, Radio, Grid } from \"@material-ui/core\";\n\nconst TempCheck = (props) => {\n\n  return (\n    <Grid container direction=\"row\" justify=\"space-evenly\">\n      <Grid item>\n        <RadioGroup\n          row\n          name=\"temperature\"\n          value={props.value ? props.value : \"Fahrenheit\"}\n          onChange={props.handleChange}\n        >\n          <FormControlLabel\n            value=\"Celcius\"\n            control={<Radio />}\n            label=\"Celcius\"\n          />\n          <FormControlLabel\n            value=\"Fahrenheit\"\n            control={<Radio />}\n            label=\"Fahrenheit\"\n          />\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TempCheck;\n","import React from \"react\";\nimport { Card, Typography, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    textAlign: \"left\",\n    [theme.breakpoints.down('sm')]: {\n      padding: \"10px\"\n    }\n  },\n  date: {\n    fontSize: 16,\n    padding: \"10px\",\n    [theme.breakpoints.down('sm')]: {\n      fontSize: 10,\n      padding: \"5px\"\n    },\n    [theme.breakpoints.down('xs')]: {\n      fontSize: 8,\n      padding: \"2px\"\n    }\n  },\n  temp: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    padding: \"1rem\",\n    [theme.breakpoints.down('sm')]: {\n      fontSize: 12,\n      padding: \"5px\"\n    },\n    [theme.breakpoints.down('xs')]: {\n      fontSize: 10,\n      padding: \"2px\"\n    }\n  },\n}));\n\nconst DayCard = (props) => {\n  const classes = useStyles();\n  const dayMeasurements = props.dayData;\n  const year = dayMeasurements[0].dayId.split(\"-\")[0];\n  const month = dayMeasurements[0].dayId.split(\"-\")[1];\n  const day = dayMeasurements[0].dayId.split(\"-\")[2];\n  const date = day + \". \" + month + \". \" + year;\n\n  const averageTemp = (data) => {\n    let tempSum = 4;\n    for (var i = 0; i < data.length; i++) {\n      if (props.tempType === \"Fahrenheit\") {\n        tempSum += data[i].main.temp;\n      } else if (props.tempType === \"Celcius\") {\n        tempSum += data[i].main.tempC;\n      }\n    }\n    const Temperature = (tempSum / data.length).toFixed();\n    return Temperature;\n  };\n\n  const averageTemperature = averageTemp(dayMeasurements);\n\n  let temperatureType;\n  if (props.tempType === \"Fahrenheit\") {\n    temperatureType = \"F\";\n  } else if (props.tempType === \"Celcius\") {\n    temperatureType = \"°C\";\n  }\n\n  const handleOnClick = () => {\n    const id = dayMeasurements[0].dayId;\n    props.handler(id);\n  };\n\n  return (\n    <Button onClick={handleOnClick}>\n      <Card className={classes.card}>\n          <Typography className={classes.date}>Date: {date}</Typography>\n          <Typography className={classes.temp}>\n            Temp: {averageTemperature} {temperatureType}\n          </Typography>\n      </Card>\n    </Button>\n  );\n};\n\nexport default DayCard;\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\n\nconst Arrow = (props) => {\n  return (\n    <IconButton onClick={props.handler} disabled={props.visible}>\n      {props.left ? <ArrowLeftIcon /> : <ArrowRightIcon />}\n    </IconButton>\n  );\n};\n\nexport default Arrow;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"4px\",\n    paddingTop: \"60px\"\n  },\n  chart: {\n    width: \"600px\",\n    [theme.breakpoints.down('sm')]: {\n      width: \"100%\"\n    }\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nconst Graph = (props) => {\n  const classes = useStyles();\n\n  const options = {\n    chart: {\n      id: \"basic-bar\",\n    },\n    xaxis: {\n      categories: props.data.measurementTimes,\n      labels: {\n        style: {\n          colors: \"#D1D5DB\",\n          fontSize: \"14px\",\n        },\n      },\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: \"#D1D5DB\",\n          fontSize: \"14px\",\n        },\n      },\n    },\n    dataLabels: {\n      enabled: false,\n      offsetY: 20,\n      style: {\n        fontSize: \"16px\",\n        colors: [\"#6EE7B7\"],\n      },\n    },\n    colors: [\"#10B981\"],\n    title: {\n      text: props.data.title,\n      align: \"center\",\n    },\n  };\n\n  const series = [\n    {\n      name: \"temperature\",\n      data: props.data.measuredTemperatures,\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      <Chart className={classes.chart}\n        type=\"bar\"\n        height=\"300px\"\n        options={options}\n        series={series}\n      />\n    </div>\n  );\n};\n\nexport default Graph;\n","import { createSlice } from \"@reduxjs/toolkit\";\nrequire('dotenv').config()\n\nconst initialState = {\n  isLoading: true,\n  data: {},\n  dayData: {},\n};\n\nconst weatherSlice = createSlice({\n  name: \"weather\",\n  initialState,\n  reducers: {\n    dataLoading(state, action) {\n      state.isLoading = true;\n    },\n    dataLoaded(state, action) {\n      state.data = action.payload;\n      state.isLoading = false;\n    },\n    addDayId(state, action) {\n      const { id, dayId } = action.payload\n      state.data.list[id].dayId = dayId\n    }\n  },\n});\n\nexport const { dataLoading, dataLoaded, addDayId } = weatherSlice.actions;\n\nexport default weatherSlice.reducer;\n\nfunction convertFtoC(temp) {\n  const tempC = parseFloat(((temp - 32) * 5/9).toFixed(2))\n  return tempC\n}\n\nfunction preprocessData(data) {\n\n  let allMeasurements = data.list\n  \n  const dayId = allMeasurements[0].dt_txt.split(\" \")[0]\n  const time = allMeasurements[0].dt_txt.split(\" \")[1]\n  allMeasurements[0].dayId = dayId\n  allMeasurements[0].time = time\n  allMeasurements[0].main.tempC = convertFtoC(allMeasurements[0].main.temp)\n\n  for ( var i=1; i<allMeasurements.length; i++ ) {\n    const dayId = allMeasurements[i].dt_txt.split(\" \")[0]\n    const time = allMeasurements[i].dt_txt.split(\" \")[1]\n    allMeasurements[i].dayId = dayId\n    allMeasurements[i].time = time\n    allMeasurements[i].main.tempC = convertFtoC(allMeasurements[i].main.temp)\n  }\n  return allMeasurements\n}\n\n// Thunk function for async fetching of data\nexport const fetchData = () => async (dispatch) => {\n  dispatch(dataLoading());\n  let data\n  const response = await fetch(\n    `http://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=75f972b80e26f14fe6c920aa6a85ad57&cnt=40`,\n    { method: \"GET\" })\n  data = await response.json()\n  if (response.ok) {\n    dispatch(dataLoaded(preprocessData(data)))\n  } else {\n    throw new Error(response.statusText)\n  }\n};\n\nexport const selectWeather = (state) => state.weather.data\n","const findMeasurementsOfDay = (data) => {\n  const days = []\n  let day = [data[0]]\n  for (var i=1; i<data.length; i++) {\n    if (data[i].dayId === data[i-1].dayId) {\n      day.push(data[i])\n    } else {\n      days.push(day)\n      day = [data[i]]\n    }\n  }\n  days.push(day)\n  day = []\n  return days\n}\n\nexport default findMeasurementsOfDay","import TempCheck from \"./features/Components/TempCheck\";\nimport DayCard from \"./features/Components/DayCard\";\nimport Arrow from \"./features/Components/Arrow\";\nimport Graph from \"./features/Components/Graph\";\nimport { Grid } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectWeather } from \"./features/store/weatherSlice\";\nimport findMeasurementsOfDay from \"./features/helper_functions/dayData\";\nimport \"./App.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    padding: \"2px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      maxWidth: 400,\n    },\n  },\n  loading: {\n    fontSize: \"32px\",\n    fontWeight: \"bold\",\n    color: \"blue\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [tempType, setTempType] = useState(\"Fahrenheit\");\n  const [arrowIndex, setArrowIndex] = useState(0);\n  const [graphId, setGraphId] = useState(\"\");\n  //const [rightInvisible, setRightInvisible] = useState(false)\n  //const [leftInvisible, setLeftInvisible] = useState(true)\n  const weatherData = useSelector(selectWeather);\n  const loading = useSelector((state) => state.weather.isLoading);\n  let rightInvisible = false\n  let leftInvisible = true\n\n  if (loading) {\n    return (\n      <div className=\"App\">\n        <div className={classes.loading}>Loading</div>\n      </div>\n    );\n  } else {\n    const days = findMeasurementsOfDay(weatherData);\n    const daysToShow = days.slice(arrowIndex, arrowIndex + 3);\n\n    const getTimeAndTemp = (data) => {\n      let times = [];\n      let values = [];\n      let title = data[0].dayId;\n      let GraphData = {\n        title: title,\n        measurementTimes: times,\n        measuredTemperatures: values,\n      };\n      for (var i = 0; i < data.length; i++) {\n        times.push(data[i].time);\n        if (tempType === \"Fahrenheit\") {\n          values.push(data[i].main.temp);\n        } else if (tempType === \"Celcius\") {\n          values.push(data[i].main.tempC);\n        }\n      }\n      return GraphData;\n    };\n\n    const graphIdHandler = (id) => {\n      setGraphId(id);\n    };\n\n    const handleChange = (event) => {\n      setTempType(event.target.value);\n    };\n\n    const rightHandler = () => {\n      if (arrowIndex < days.length - 3) {\n        setArrowIndex(arrowIndex + 1);\n      }\n      setGraphId(\"\");\n    };\n\n    const leftHandler = () => {\n      if (arrowIndex > 0) {\n        setArrowIndex(arrowIndex - 1);\n      }\n      setGraphId(\"\");\n    };\n    console.log(\"days\", days.length);\n    console.log(\"index\", arrowIndex);\n\n      if (arrowIndex <= 0) {\n        leftInvisible = true\n        rightInvisible = false\n      } else if (arrowIndex >= days.length - 3) {\n        leftInvisible = false\n        rightInvisible = true\n      } else {\n        leftInvisible = false\n        rightInvisible = false\n      }\n    \n\n    return (\n      <div className=\"App\">\n        <TempCheck value={tempType} handleChange={handleChange} />\n        <Grid container direction=\"row\" justify=\"space-around\">\n          <Arrow left={true} handler={leftHandler} visible={leftInvisible} />\n          <Arrow left={false} handler={rightHandler} visible={rightInvisible} />\n        </Grid>\n        <Grid container direction=\"row\" justify=\"space-evenly\">\n          {daysToShow.map((day) => (\n            <Grid key={day[0].dayId} item className={classes.grid}>\n              <DayCard\n                dayData={day}\n                tempType={tempType}\n                handler={graphIdHandler}\n              />\n            </Grid>\n          ))}\n        </Grid>\n        {daysToShow.map(\n          (day) =>\n            day[0].dayId === graphId && <Graph data={getTimeAndTemp(day)} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport weatherReducer from '../features/store/weatherSlice'\n\nconst store = configureStore({\n  reducer: {\n    weather: weatherReducer\n  }\n});\n\nexport default store\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { fetchData } from \"./features/store/weatherSlice\"\n\nstore.dispatch(fetchData())\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}