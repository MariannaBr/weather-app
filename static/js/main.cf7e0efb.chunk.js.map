{"version":3,"sources":["features/Components/StyledRadio.js","features/Components/TempCheck.js","features/helper_functions/averageTemp.js","features/helper_functions/niceDate.js","features/Components/DayCard.js","features/Components/Arrow.js","features/Components/Graph.js","features/helper_functions/convertTemp.js","features/store/weatherSlice.js","features/helper_functions/dayData.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","backgroundColor","icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","display","content","StyledRadio","props","classes","Radio","className","disableRipple","color","clsx","TempCheck","Grid","container","direction","justify","item","RadioGroup","row","name","value","onChange","handleChange","FormControlLabel","control","label","averageTemp","data","tempType","tempSum","i","length","main","tempF","tempC","Math","round","giveNiceDate","dayData","year","dayId","split","month","theme","button","card","textAlign","breakpoints","down","padding","date","fontSize","temp","fontWeight","DayCard","temperatureType","dayMeasurements","averageTemperature","Button","onClick","id","handler","Card","Typography","Arrow","IconButton","disabled","visible","left","paddingTop","chart","title","pos","marginBottom","Graph","options","xaxis","categories","measurementTimes","labels","style","colors","yaxis","dataLabels","enabled","offsetY","text","align","series","measuredTemperatures","type","convertKtoF","parseFloat","toFixed","convertKtoC","weatherSlice","createSlice","initialState","isLoading","reducers","dataLoading","state","action","dataLoaded","payload","addDayId","list","actions","preprocessData","city","allMeasurements","dt_txt","time","selectWeather","weather","findMeasurementsOfDay","days","day","push","grid","justifyContent","alignItems","maxWidth","loading","arrows","cards","App","useState","setTempType","arrowIndex","setArrowIndex","graphId","setGraphId","weatherData","useSelector","rightInvisible","leftInvisible","daysToShow","slice","getTimeAndTemp","times","values","GraphData","graphIdHandler","event","target","map","store","configureStore","reducer","weatherReducer","Boolean","window","location","hostname","match","dispatch","a","fetch","method","response","json","ok","Error","statusText","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf7e0efb.chunk.js","sourcesContent":["import React from 'react'\nimport { Radio } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles({\n  root: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: '#10B981',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#10B981',\n    },\n  },\n});\n\nfunction StyledRadio(props) {\n  const classes = useStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n      icon={<span className={classes.icon} />}\n      {...props}\n    />\n  );\n}\n\nexport default StyledRadio","import React from \"react\";\nimport { RadioGroup, FormControlLabel, Grid } from \"@material-ui/core\";\nimport StyledRadio from \"./StyledRadio\";\n\nconst TempCheck = (props) => {\n\n  return (\n    <Grid container direction=\"row\" justify=\"space-evenly\">\n      <Grid item>\n        <RadioGroup\n          row\n          name=\"temperature\"\n          value={props.value ? props.value : \"Fahrenheit\"}\n          onChange={props.handleChange}\n        >\n          <FormControlLabel\n            value=\"Celcius\"\n            control={<StyledRadio />}\n            label=\"Celcius\"\n          />\n          <FormControlLabel\n            value=\"Fahrenheit\"\n            control={<StyledRadio />}\n            label=\"Fahrenheit\"\n          />\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TempCheck;\n","const averageTemp = (data, tempType) => {\n  let tempSum = 0;\n  for (var i = 0; i < data.length; i++) {\n    if (tempType === \"Fahrenheit\") {\n      tempSum += data[i].main.tempF;\n    } else if (tempType === \"Celcius\") {\n      tempSum += data[i].main.tempC;\n    }\n  }\n  const Temperature = Math.round((tempSum / data.length));\n  return Temperature;\n};\n\nexport default averageTemp","const giveNiceDate = (dayData) => {\n  const year = dayData[0].dayId.split(\"-\")[0];\n  const month = dayData[0].dayId.split(\"-\")[1];\n  const day = dayData[0].dayId.split(\"-\")[2];\n  const date = day + \". \" + month + \". \" + year;\n  return date\n};\n\nexport default giveNiceDate","import React from \"react\";\nimport { Card, Typography, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport averageTemp from \"../helper_functions/averageTemp\";\nimport giveNiceDate from \"../helper_functions/niceDate\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    '&:focus': {\n      boxShadow: '0 0 0 0.1rem #10B981',\n    },\n  },\n  card: {\n    textAlign: \"left\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"10px\",\n    },\n  },\n  date: {\n    fontSize: 16,\n    padding: \"10px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: 10,\n      padding: \"5px\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: 8,\n      padding: \"2px\",\n    },\n  },\n  temp: {\n    fontSize: 18,\n    color: \"#10B981\",\n    fontWeight: \"bold\",\n    padding: \"1rem\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: 12,\n      padding: \"5px\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: 10,\n      padding: \"2px\",\n    },\n  },\n}));\n\nconst DayCard = (props) => {\n  const classes = useStyles();\n  const dayMeasurements = props.dayData;\n  const date = giveNiceDate(dayMeasurements)\n  const averageTemperature = averageTemp(dayMeasurements, props.tempType);\n\n  let temperatureType;\n  if (props.tempType === \"Fahrenheit\") {\n    temperatureType = \"F\";\n  } else if (props.tempType === \"Celcius\") {\n    temperatureType = \"°C\";\n  }\n\n  const handleOnClick = () => {\n    const id = dayMeasurements[0].dayId;\n    props.handler(id);\n  };\n\n  return (\n    <Button onClick={handleOnClick} disableRipple className={classes.button}>\n      <Card className={classes.card}>\n        <Typography className={classes.date}>Date: {date}</Typography>\n        <Typography className={classes.temp}>\n          Temp: {averageTemperature} {temperatureType}\n        </Typography>\n      </Card>\n    </Button>\n  );\n};\n\nexport default DayCard;\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    backgroundColor: \"#A7F3D0\",\n  },\n}));\n\nconst Arrow = (props) => {\n  const classes = useStyles();\n  return (\n    <IconButton className={classes.button} onClick={props.handler} disabled={props.visible}>\n      {props.left ? <ArrowLeftIcon /> : <ArrowRightIcon />}\n    </IconButton>\n  );\n};\n\nexport default Arrow;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"4px\",\n    paddingTop: \"60px\"\n  },\n  chart: {\n    width: \"600px\",\n    [theme.breakpoints.down('sm')]: {\n      width: \"100%\"\n    }\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nconst Graph = (props) => {\n  const classes = useStyles();\n\n  const options = {\n    chart: {\n      id: \"basic-bar\",\n    },\n    xaxis: {\n      categories: props.data.measurementTimes,\n      labels: {\n        style: {\n          colors: \"#9CA3AF\",\n          fontSize: \"14px\",\n        },\n      },\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: \"#9CA3AF\",\n          fontSize: \"14px\",\n        },\n      },\n    },\n    dataLabels: {\n      enabled: false,\n      offsetY: 20,\n      style: {\n        fontSize: \"16px\",\n        colors: [\"#6EE7B7\"],\n      },\n    },\n    colors: [\"#10B981\"],\n    title: {\n      text: props.data.title,\n      align: \"center\",\n    },\n  };\n\n  const series = [\n    {\n      name: \"temperature\",\n      data: props.data.measuredTemperatures,\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      <Chart className={classes.chart}\n        type=\"bar\"\n        height=\"300px\"\n        options={options}\n        series={series}\n      />\n    </div>\n  );\n};\n\nexport default Graph;\n","export function convertKtoF(temp) {\n  const tempF = parseFloat(((temp - 273.15) * 9/5 + 32).toFixed(2))\n  return tempF\n}\n\nexport function convertKtoC(temp) {\n  const tempC = parseFloat((temp - 273.15).toFixed(2))\n  return tempC\n}","import { createSlice } from \"@reduxjs/toolkit\";\nimport { convertKtoF, convertKtoC } from \"../helper_functions/convertTemp\"\n\nconst initialState = {\n  isLoading: true,\n  data: {},\n  dayData: {},\n};\n\nconst weatherSlice = createSlice({\n  name: \"weather\",\n  initialState,\n  reducers: {\n    dataLoading(state, action) {\n      state.isLoading = true;\n    },\n    dataLoaded(state, action) {\n      state.data = action.payload;\n      state.isLoading = false;\n    },\n    addDayId(state, action) {\n      const { id, dayId } = action.payload\n      state.data.list[id].dayId = dayId\n    }\n  },\n});\n\nexport const { dataLoading, dataLoaded, addDayId } = weatherSlice.actions;\n\nexport default weatherSlice.reducer;\n\nfunction preprocessData(data) {\n\n  const city = data.city.name\n  let allMeasurements = data.list\n  \n  const dayId = allMeasurements[0].dt_txt.split(\" \")[0]\n  const time = allMeasurements[0].dt_txt.split(\" \")[1]\n  allMeasurements[0].dayId = dayId\n  allMeasurements[0].time = time\n  allMeasurements[0].city = city\n  allMeasurements[0].main.tempF = convertKtoF(allMeasurements[0].main.temp)\n  allMeasurements[0].main.tempC = convertKtoC(allMeasurements[0].main.temp)\n\n  for ( var i=1; i<allMeasurements.length; i++ ) {\n    const dayId = allMeasurements[i].dt_txt.split(\" \")[0]\n    const time = allMeasurements[i].dt_txt.split(\" \")[1]\n    allMeasurements[i].dayId = dayId\n    allMeasurements[i].time = time\n    allMeasurements[i].main.tempF = convertKtoF(allMeasurements[i].main.temp)\n    allMeasurements[i].main.tempC = convertKtoC(allMeasurements[i].main.temp)\n  }\n  return allMeasurements\n}\n\n// Thunk function for async fetching of data\nexport const fetchData = () => async (dispatch) => {\n  dispatch(dataLoading());\n  let data\n  const response = await fetch(\n    `https://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=75f972b80e26f14fe6c920aa6a85ad57&cnt=40`,\n    { method: \"GET\" })\n  data = await response.json()\n  if (response.ok) {\n    dispatch(dataLoaded(preprocessData(data)))\n  } else {\n    throw new Error(response.statusText)\n  }\n};\n\nexport const selectWeather = (state) => state.weather.data\n","const findMeasurementsOfDay = (data) => {\n  const days = []\n  let day = [data[0]]\n  for (var i=1; i<data.length; i++) {\n    if (data[i].dayId === data[i-1].dayId) {\n      day.push(data[i])\n    } else {\n      days.push(day)\n      day = [data[i]]\n    }\n  }\n  days.push(day)\n  day = []\n  return days\n}\n\nexport default findMeasurementsOfDay","import TempCheck from \"./features/Components/TempCheck\";\nimport DayCard from \"./features/Components/DayCard\";\nimport Arrow from \"./features/Components/Arrow\";\nimport Graph from \"./features/Components/Graph\";\nimport giveNiceDate from \"./features/helper_functions/niceDate\";\nimport { Grid } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectWeather } from \"./features/store/weatherSlice\";\nimport findMeasurementsOfDay from \"./features/helper_functions/dayData\";\nimport \"./App.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    padding: \"2px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      maxWidth: 400,\n    },\n  },\n  loading: {\n    fontSize: \"32px\",\n    fontWeight: \"bold\",\n    color: \"#10B981\",\n  },\n  arrows: {\n    paddingTop: \"40px\"\n  },\n  cards: {\n    paddingTop: \"40px\"\n  },\n  title: {\n    padding: \"40px\",\n    fontWeight: \"bold\",\n    fontSize: \"40px\",\n    color: \"#10B981\"\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [tempType, setTempType] = useState(\"Fahrenheit\");\n  const [arrowIndex, setArrowIndex] = useState(0);\n  const [graphId, setGraphId] = useState(\"\");\n  const weatherData = useSelector(selectWeather);\n  const loading = useSelector((state) => state.weather.isLoading);\n  let rightInvisible = false;\n  let leftInvisible = true;\n\n  if (loading) {\n    return (\n      <div className=\"App\">\n        <div className={classes.loading}>Loading</div>\n      </div>\n    );\n  } else {\n    const days = findMeasurementsOfDay(weatherData);\n    const daysToShow = days.slice(arrowIndex, arrowIndex + 3);\n    const city = weatherData[0].city\n\n    const getTimeAndTemp = (data) => {\n      let times = [];\n      let values = [];\n      let title = giveNiceDate(data);\n      let GraphData = {\n        title: title,\n        measurementTimes: times,\n        measuredTemperatures: values,\n      };\n      for (var i = 0; i < data.length; i++) {\n        times.push(data[i].time);\n        if (tempType === \"Fahrenheit\") {\n          values.push(data[i].main.tempF);\n        } else if (tempType === \"Celcius\") {\n          values.push(data[i].main.tempC);\n        }\n      }\n      return GraphData;\n    };\n\n    const graphIdHandler = (id) => {\n      setGraphId(id);\n    };\n\n    const handleChange = (event) => {\n      setTempType(event.target.value);\n    };\n\n    const rightHandler = () => {\n      if (arrowIndex < days.length - 3) {\n        setArrowIndex(arrowIndex + 1);\n      }\n      setGraphId(\"\");\n    };\n\n    const leftHandler = () => {\n      if (arrowIndex > 0) {\n        setArrowIndex(arrowIndex - 1);\n      }\n      setGraphId(\"\");\n    };\n\n    if (arrowIndex <= 0) {\n      leftInvisible = true;\n      rightInvisible = false;\n    } else if (arrowIndex >= days.length - 3) {\n      leftInvisible = false;\n      rightInvisible = true;\n    } else {\n      leftInvisible = false;\n      rightInvisible = false;\n    }\n\n    return (\n      <div className=\"App\">\n      <div className={classes.title}>{city}</div>\n        <TempCheck value={tempType} handleChange={handleChange} />\n        <Grid container direction=\"row\" justify=\"space-around\" className={classes.arrows}>\n          <Arrow left={true} handler={leftHandler} visible={leftInvisible} />\n          <Arrow left={false} handler={rightHandler} visible={rightInvisible} />\n        </Grid>\n        <Grid container direction=\"row\" justify=\"space-evenly\" className={classes.cards}>\n          {daysToShow.map((day) => (\n            <Grid key={day[0].dayId} item className={classes.grid}>\n              <DayCard\n                dayData={day}\n                tempType={tempType}\n                handler={graphIdHandler}\n              />\n            </Grid>\n          ))}\n        </Grid>\n        {daysToShow.map(\n          (day) =>\n            day[0].dayId === graphId && <Graph key={day[0].dayId} data={getTimeAndTemp(day)} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport weatherReducer from '../features/store/weatherSlice'\n\nconst store = configureStore({\n  reducer: {\n    weather: weatherReducer\n  }\n});\n\nexport default store\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { fetchData } from \"./features/store/weatherSlice\"\n\nstore.dispatch(fetchData())\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}